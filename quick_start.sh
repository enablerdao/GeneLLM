#!/bin/bash

# „ÇØ„Ç§„ÉÉ„ÇØ„Çπ„Çø„Éº„Éà„Çπ„ÇØ„É™„Éó„Éà
# „Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÅØÂøÖË¶Å„Å™‰æùÂ≠òÈñ¢‰øÇ„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„ÄÅ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Çí„Éì„É´„Éâ„Åó„Å¶ÊúÄÂàù„ÅÆË≥™Âïè„ÇíÂÆüË°å„Åó„Åæ„Åô

# „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åü„ÇâÂÅúÊ≠¢
set -e

echo "üöÄ CË®ÄË™û„Å´„Çà„ÇãË∂ÖËªΩÈáèAIÂÆüË£Ö„Éó„É≠„Ç∏„Çß„ÇØ„Éà - „ÇØ„Ç§„ÉÉ„ÇØ„Çπ„Çø„Éº„Éà"
echo "============================================================"

# „É™„Éù„Ç∏„Éà„É™„Çí„ÇØ„É≠„Éº„É≥ÔºàÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥ÂêàÔºâ
if [ ! -d "src" ]; then
  echo "üì• „É™„Éù„Ç∏„Éà„É™„Çí„ÇØ„É≠„Éº„É≥„Åó„Å¶„ÅÑ„Åæ„Åô..."
  git clone https://github.com/enablerdao/GeneLLM.git .
fi

# ÂøÖË¶Å„Å™„É©„Ç§„Éñ„É©„É™„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶„Ç§„É≥„Çπ„Éà„Éº„É´„Åô„ÇãÈñ¢Êï∞
check_and_install_dependencies() {
    echo "ÂøÖË¶Å„Å™‰æùÂ≠òÈñ¢‰øÇ„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶„ÅÑ„Åæ„Åô..."

    # OS „ÅÆÁ®ÆÈ°û„ÇíÂà§ÂÆö
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$NAME
    elif type lsb_release >/dev/null 2>&1; then
        OS=$(lsb_release -si)
    elif [ -f /etc/lsb-release ]; then
        . /etc/lsb-release
        OS=$DISTRIB_ID
    else
        OS=$(uname -s)
    fi

    echo "Ê§úÂá∫„Åï„Çå„ÅüOS: $OS"

    # Debian/UbuntuÁ≥ª
    if [[ "$OS" == *"Ubuntu"* ]] || [[ "$OS" == *"Debian"* ]]; then
        echo "Debian/UbuntuÁ≥ª„ÅÆ„Ç∑„Çπ„ÉÜ„É†„ÇíÊ§úÂá∫„Åó„Åæ„Åó„Åü"

        # MeCab„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
        if ! dpkg -l | grep -q libmecab-dev; then
            echo "MeCab„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô..."
            sudo apt-get update
            sudo apt-get install -y libmecab-dev mecab mecab-ipadic-utf8
        else
            echo "MeCab„ÅØ„Åô„Åß„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åô"
        fi

        # libcurl„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
        if ! dpkg -l | grep -q libcurl4-openssl-dev; then
            echo "libcurl„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô..."
            sudo apt-get update
            sudo apt-get install -y libcurl4-openssl-dev
        else
            echo "libcurl„ÅØ„Åô„Åß„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åô"
        fi

    # Red Hat/CentOS/FedoraÁ≥ª
    elif [[ "$OS" == *"CentOS"* ]] || [[ "$OS" == *"Red Hat"* ]] || [[ "$OS" == *"Fedora"* ]]; then
        echo "Red Hat/CentOS/FedoraÁ≥ª„ÅÆ„Ç∑„Çπ„ÉÜ„É†„ÇíÊ§úÂá∫„Åó„Åæ„Åó„Åü"

        # MeCab„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
        if ! rpm -qa | grep -q mecab-devel; then
            echo "MeCab„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô..."
            sudo yum install -y mecab mecab-devel mecab-ipadic
        else
            echo "MeCab„ÅØ„Åô„Åß„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åô"
        fi

        # libcurl„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
        if ! rpm -qa | grep -q libcurl-devel; then
            echo "libcurl„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô..."
            sudo yum install -y libcurl-devel
        else
            echo "libcurl„ÅØ„Åô„Åß„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åô"
        fi

    # macOS
    elif [[ "$OS" == *"Darwin"* ]] || [[ "$OS" == *"Mac"* ]]; then
        echo "macOS„ÇíÊ§úÂá∫„Åó„Åæ„Åó„Åü"

        # Homebrew„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
        if ! command -v brew &> /dev/null; then
            echo "Homebrew„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        fi

        # MeCab„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
        if ! brew list mecab &> /dev/null; then
            echo "MeCab„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô..."
            brew install mecab mecab-ipadic
        else
            echo "MeCab„ÅØ„Åô„Åß„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åô"
        fi

        # libcurl„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
        if ! brew list curl &> /dev/null; then
            echo "curl„Åå„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åô..."
            brew install curl
        else
            echo "curl„ÅØ„Åô„Åß„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Å¶„ÅÑ„Åæ„Åô"
        fi

    # „Åù„ÅÆ‰ªñ„ÅÆOS
    else
        echo "Êú™„Çµ„Éù„Éº„Éà„ÅÆOS„Åß„Åô: $OS"
        echo "ÂøÖË¶Å„Å™„É©„Ç§„Éñ„É©„É™„ÇíÊâãÂãï„Åß„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Å¶„Åè„Å†„Åï„ÅÑ:"
        echo "- MeCab (libmecab-dev)"
        echo "- libcurl (libcurl4-openssl-dev)"
    fi

    echo "‰æùÂ≠òÈñ¢‰øÇ„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü"
}

# ‰æùÂ≠òÈñ¢‰øÇ„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶„Ç§„É≥„Çπ„Éà„Éº„É´
check_and_install_dependencies

# „Éì„É´„Éâ„ÇíÂÆüË°å
echo "üî® „Éó„É≠„Ç∏„Çß„ÇØ„Éà„Çí„Éì„É´„Éâ„Åó„Å¶„ÅÑ„Åæ„Åô..."

# „Éá„Ç£„É¨„ÇØ„Éà„É™„Çí‰ΩúÊàê
mkdir -p bin
mkdir -p knowledge/base
mkdir -p knowledge/docs
mkdir -p knowledge/text/wikipedia
mkdir -p data/models
mkdir -p data/vector_db
mkdir -p logs
touch data/learning_db.txt

# Êó•Êú¨Ë™ûÂçòË™û„É™„Çπ„Éà„ÅÆ„Çµ„É≥„Éó„É´„Çí‰ΩúÊàêÔºàÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥ÂêàÔºâ
if [ ! -f knowledge/text/japanese_words.txt ]; then
  echo "Êó•Êú¨Ë™ûÂçòË™û„É™„Çπ„Éà„ÅÆ„Çµ„É≥„Éó„É´„Çí‰ΩúÊàê„Åó„Å¶„ÅÑ„Åæ„Åô..."
  cat > knowledge/text/japanese_words.txt << EOL
„Åì„Çì„Å´„Å°„ÅØ
‰∏ñÁïå
„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞
„Ç≥„É≥„Éî„É•„Éº„Çø
‰∫∫Â∑•Áü•ËÉΩ
Ê©üÊ¢∞Â≠¶Áøí
Ëá™ÁÑ∂Ë®ÄË™ûÂá¶ÁêÜ
„Éá„Éº„Çø„Éô„Éº„Çπ
„Ç¢„É´„Ç¥„É™„Ç∫„É†
„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ
EOL
fi

# „É°„Ç§„É≥„Éó„É≠„Ç∞„É©„É†„Çí„Éì„É´„Éâ
echo "„É°„Ç§„É≥„Éó„É≠„Ç∞„É©„É†„Çí„Éì„É´„Éâ„Åó„Å¶„ÅÑ„Åæ„Åô..."
echo "Building main program..."

# „Éì„É´„Éâ„Çπ„ÇØ„É™„Éó„Éà„ÅåÂ≠òÂú®„Åô„ÇãÂ†¥Âêà„ÅØ„Åù„Çå„Çí‰ΩøÁî®
if [ -f "build.sh" ]; then
    chmod +x build.sh
    ./build.sh
else
    # macOS„ÅÆÂ†¥Âêà„ÅØMeCab„ÅÆ„Éë„Çπ„ÇíÊ§úÂá∫
    MECAB_CFLAGS=""
    MECAB_LDFLAGS=""
    COMPILER="gcc"
    
    if [[ "$(uname -s)" == "Darwin" ]]; then
        # macOS„Åß„ÅØclang„Çí‰ΩøÁî®
        COMPILER="clang"
        
        # mecab-config„ÅåÂà©Áî®ÂèØËÉΩ„ÅãÁ¢∫Ë™ç
        if command -v mecab-config &> /dev/null; then
            MECAB_CFLAGS="-I$(mecab-config --inc-dir)"
            MECAB_LDFLAGS="-L$(mecab-config --libs-only-L | sed 's/-L//g')"
        # Homebrew„ÅÆ„Éá„Éï„Ç©„É´„Éà„Éë„Çπ„ÇíË©¶„Åô
        elif [ -d "/usr/local/include/mecab" ]; then
            MECAB_CFLAGS="-I/usr/local/include"
            MECAB_LDFLAGS="-L/usr/local/lib"
        elif [ -d "/opt/homebrew/include/mecab" ]; then
            MECAB_CFLAGS="-I/opt/homebrew/include"
            MECAB_LDFLAGS="-L/opt/homebrew/lib"
        fi
        
        # macOSÁâπÊúâ„ÅÆ„Éï„É©„Ç∞„ÇíËøΩÂä†
        CFLAGS="$MECAB_CFLAGS -arch $(uname -m)"
        LDFLAGS="$MECAB_LDFLAGS -arch $(uname -m)"
    else
        CFLAGS="$MECAB_CFLAGS"
        LDFLAGS="$MECAB_LDFLAGS"
    fi
    
    # src_new„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅåÂ≠òÂú®„Åô„ÇãÂ†¥Âêà„ÅØÊñ∞„Åó„ÅÑ„ÇΩ„Éº„Çπ„Çí‰ΩøÁî®
    if [ -d "src_new" ]; then
        echo "Êñ∞„Åó„ÅÑ„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Çí‰ΩøÁî®„Åó„Å¶„Éì„É´„Éâ„Åó„Åæ„Åô..."
        $COMPILER $CFLAGS -Wall -Wextra -std=c99 -o gllm src_new/main_simple.c src_new/include/vector_db.c src_new/vector_search/vector_search.c src_new/vector_search/vector_search_global.c src_new/include/word_loader/word_loader.c $LDFLAGS -lmecab -lm -lcurl
    else
        # ÂæìÊù•„ÅÆ„ÇΩ„Éº„Çπ„Ç≥„Éº„Éâ„Çí‰ΩøÁî®
        $COMPILER $CFLAGS -Wall -Wextra -std=c99 -o gllm src/main.c src/vector_search/vector_search.c src/include/word_loader.c $LDFLAGS -lmecab -lm -lcurl
    fi
fi

# bin „Éá„Ç£„É¨„ÇØ„Éà„É™„Å´„ÇÇ„Ç≥„Éî„Éº
if [ -f gllm ]; then
    cp gllm bin/main
fi

# ÂÄãÂà•„É¢„Ç∏„É•„Éº„É´„Çí„Éì„É´„Éâ
echo "ÂÄãÂà•„É¢„Ç∏„É•„Éº„É´„Çí„Éì„É´„Éâ„Åó„Å¶„ÅÑ„Åæ„Åô..."
echo "Building individual modules..."

# macOS„Åß„ÅÆmecab.h„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑÂïèÈ°å„ÇíËß£Ê±∫„Åô„Çã„Åü„ÇÅ„ÅÆËøΩÂä†„ÉÅ„Çß„ÉÉ„ÇØ
if [[ "$(uname -s)" == "Darwin" ]]; then
    # mecab-config„ÅåÂà©Áî®ÂèØËÉΩ„Åã„Å©„ÅÜ„Åã„ÇíÁ¢∫Ë™ç
    if command -v mecab-config >/dev/null 2>&1; then
        echo "mecab-config„Çí‰ΩøÁî®„Åó„Å¶MeCab„ÅÆ„Éë„Çπ„ÇíÊ§úÂá∫„Åó„Åæ„Åô..."
        MECAB_INCLUDE_PATH=$(mecab-config --inc-dir)
        echo "MeCab„Ç§„É≥„ÇØ„É´„Éº„Éâ„Éë„Çπ: $MECAB_INCLUDE_PATH"
        
        # mecab.h„Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åô„Çã„ÅãÁ¢∫Ë™ç
        if [ -f "$MECAB_INCLUDE_PATH/mecab.h" ]; then
            echo "mecab.h„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü: $MECAB_INCLUDE_PATH/mecab.h"
        else
            echo "Ë≠¶Âëä: $MECAB_INCLUDE_PATH/mecab.h „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
            
            # ‰∏ÄËà¨ÁöÑ„Å™„Éë„Çπ„ÇíÁ¢∫Ë™ç
            POSSIBLE_PATHS=(
                "/usr/local/include"
                "/usr/local/include/mecab"
                "/opt/homebrew/include"
                "/opt/homebrew/include/mecab"
                "/usr/include"
                "/usr/include/mecab"
                "$(brew --prefix 2>/dev/null)/include"
                "$(brew --prefix 2>/dev/null)/include/mecab"
            )
            
            for path in "${POSSIBLE_PATHS[@]}"; do
                if [ -f "$path/mecab.h" ]; then
                    echo "mecab.h„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü: $path/mecab.h"
                    MECAB_INCLUDE_PATH="$path"
                    CFLAGS="-I$MECAB_INCLUDE_PATH -arch $(uname -m)"
                    break
                fi
            done
        fi
    fi
fi

# macOS„ÅÆÂ†¥Âêà„ÅØMeCab„ÅÆ„Éë„Çπ„ÇíÊ§úÂá∫
MECAB_CFLAGS=""
MECAB_LDFLAGS=""
COMPILER="gcc"

if [[ "$(uname -s)" == "Darwin" ]]; then
    # macOS„Åß„ÅØclang„Çí‰ΩøÁî®
    COMPILER="clang"
    
    # mecab-config„ÅåÂà©Áî®ÂèØËÉΩ„ÅãÁ¢∫Ë™ç
    if command -v mecab-config &> /dev/null; then
        MECAB_CFLAGS="-I$(mecab-config --inc-dir)"
        MECAB_LDFLAGS="-L$(mecab-config --libs-only-L | sed 's/-L//g')"
    # Homebrew„ÅÆ„Éá„Éï„Ç©„É´„Éà„Éë„Çπ„ÇíË©¶„Åô
    elif [ -d "/usr/local/include/mecab" ]; then
        MECAB_CFLAGS="-I/usr/local/include"
        MECAB_LDFLAGS="-L/usr/local/lib"
    elif [ -d "/opt/homebrew/include/mecab" ]; then
        MECAB_CFLAGS="-I/opt/homebrew/include"
        MECAB_LDFLAGS="-L/opt/homebrew/lib"
    fi
    
    # macOSÁâπÊúâ„ÅÆ„Éï„É©„Ç∞„ÇíËøΩÂä†
    CFLAGS="$MECAB_CFLAGS -arch $(uname -m)"
    LDFLAGS="$MECAB_LDFLAGS -arch $(uname -m)"
else
    CFLAGS="$MECAB_CFLAGS"
    LDFLAGS="$MECAB_LDFLAGS"
fi

# „Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åô„ÇãÂ†¥Âêà„ÅÆ„Åø„Éì„É´„Éâ
if [ -f src/analyzers/simple_analyzer.c ]; then
    $COMPILER $CFLAGS -Wall -Wextra -std=c99 -o bin/simple_analyzer src/analyzers/simple_analyzer.c $LDFLAGS -lmecab
fi

if [ -f src/compressors/dna_compressor.c ]; then
    $COMPILER $CFLAGS -Wall -Wextra -std=c99 -o bin/dna_compressor src/compressors/dna_compressor.c $LDFLAGS
fi

if [ -f src/vector_search/vector_search.c ]; then
    $COMPILER $CFLAGS -Wall -Wextra -std=c99 -o bin/vector_search src/vector_search/vector_search.c $LDFLAGS -lm
fi

if [ -f src/generators/graph_generator.c ]; then
    $COMPILER $CFLAGS -Wall -Wextra -std=c99 -o bin/graph_generator src/generators/graph_generator.c $LDFLAGS
fi

if [ -f src/routers/router_model.c ]; then
    $COMPILER $CFLAGS -Wall -Wextra -std=c99 -o bin/router_model src/routers/router_model.c $LDFLAGS -lmecab
fi

echo "Build completed."
echo "To run: ./gllm [options]"

# ÊúÄÂàù„ÅÆË≥™Âïè„ÇíÂÆüË°å
echo "üí¨ ÊúÄÂàù„ÅÆË≥™Âïè„ÇíÂÆüË°å„Åó„Åæ„Åô..."
echo "============================================================"
./gllm "CË®ÄË™û„ÅßHello World„ÇíË°®Á§∫„Åô„Çã„Éó„É≠„Ç∞„É©„É†„ÇíÊïô„Åà„Å¶„Åè„Å†„Åï„ÅÑ"

echo "============================================================"
echo "‚úÖ „ÇØ„Ç§„ÉÉ„ÇØ„Çπ„Çø„Éº„Éà„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ"
echo "‰ªñ„ÅÆË≥™Âïè„ÇíË©¶„Åô„Å´„ÅØ: ./gllm \"„ÅÇ„Å™„Åü„ÅÆË≥™Âïè\""
echo "„Éá„Éê„ÉÉ„Ç∞„É¢„Éº„Éâ„ÅßÂÆüË°å„Åô„Çã„Å´„ÅØ: ./gllm -d \"„ÅÇ„Å™„Åü„ÅÆË≥™Âïè\""
echo "ÂØæË©±„É¢„Éº„Éâ„ÅßÂÆüË°å„Åô„Çã„Å´„ÅØ: ./gllm -i"
